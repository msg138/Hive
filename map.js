
Lemonade.include("astar.js");

var GLB_TILE_SIZE = 96;
var GLB_TILE_SEPERATER = GLB_TILE_SIZE/96 * GLB_TILE_SIZE/96;

function MapFactory(width, height, tiles){
      var map = new Lemonade.Entity();
      map.addComponent(Lemonade.Components.visible
        ).addComponent(Lemonade.Components.position
        ).addComponent(Lemonade.Components.camera
        //).addComponent(Lemonade.Components.rectangle
        ).addComponent(Lemonade.Components.image
        ).addComponent(Lemonade.Components.tilemap);
      map.set("position", "x", 0);
      map.set("position", "y", 0);
      map.set("position", "width", GLB_TILE_SIZE * width);
      map.set("position", "height", GLB_TILE_SIZE * height);
      
      map.set("tilemap", "tiles", tiles || [[],[]]);
      map.set("tilemap", "width", width);
      map.set("tilemap", "height", height);
      
      return map;
};

function TestMap(){
    var map = MapFactory(32, 32, [[3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                ], 
                                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
                                [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,]]);
    map.set("tilemap", "unwalkable", [6]);
    
    map.set("tilemap", "spriteSheetName", "content/images/map/cookieland.png");
    {
        var i = Lemonade.Repository.addImage("content/images/map/cookieland.png", "content/images/map/cookieland.png", 256, 32);
        i.setSpriteSheet(8, 32, 32);
        i.originX = GLB_TILE_SIZE / 2;
        i.originY = GLB_TILE_SIZE / 2;
    }
    
    return map;
};

function TestingMap(){
    var map = MapFactory(10, 20, [[7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        ],
                                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],
                                    [5, 6, 6, 6, 6, 6, 6, 6, 6, 5,
                                    4, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                                    4, 0, 0, 0, 3, 0, 0, 3, 0, 4,
                                    4, 0, 0, 0, 3, 0, 0, 3, 0, 4,
                                    4, 0, 0, 0, 3, 2, 3, 3, 3, 4,
                                    4, 0, 0, 0, 0, 0, 0, 3, 0, 4,
                                    4, 0, 0, 0, 0, 0, 0, 3, 3, 4,
                                    4, 0, 0, 0, 3, 2, 0, 0, 0, 4,
                                    4, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                                    4, 0, 0, 0, 3, 2, 0, 0, 0, 4,
                                    4, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                                    4, 0, 0, 0, 3, 2, 0, 0, 0, 4,
                                    4, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                                    4, 0, 0, 0, 3, 2, 0, 0, 0, 4,
                                    4, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                                    4, 0, 0, 0, 3, 2, 0, 0, 0, 4,
                                    4, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                                    4, 0, 0, 0, 3, 2, 0, 0, 0, 4,
                                    5, 2, 0, 3, 6, 6, 2, 0, 3, 5,
                                    5, 5, 6, 6, 6, 6, 6, 6, 5, 5,]]);
                                    
    map.set("tilemap", "unwalkable", [1, 2, 3, 4, 5, 6]);
    
    map.set("tilemap", "spriteSheetName", "content/images/map/cave1.png");
    {
        var i = Lemonade.Repository.addImage("content/images/map/cave1.png", "content/images/map/cave1.png", 256, 32);
        i.setSpriteSheet(8, 32, 32);
        i.originX = GLB_TILE_SIZE / 2;
        i.originY = GLB_TILE_SIZE / 2;
    }
    return map;
}
function SelectionMap(){
    var map = MapFactory(10, 20, [[7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                        ],
                                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,],
                                    [0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, 
                                    0, 0, 0, 0, 0, 0, 0,0, 0, 0, ]]);
                                    
    map.set("tilemap", "unwalkable", [1, 2, 3, 4, 5, 6]);
    
    map.set("tilemap", "spriteSheetName", "content/images/map/cave1.png");
    {
        var i = Lemonade.Repository.addImage("content/images/map/cave1.png", "content/images/map/cave1.png", 256, 32);
        i.setSpriteSheet(8, 32, 32);
        i.originX = GLB_TILE_SIZE / 2;
        i.originY = GLB_TILE_SIZE / 2;
    }
    return map;
}

function FairgroundMap(){
    var map = MapFactory(32, 32, [[3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                   3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1, 3, 4, 3, 3, 4, 3, 4, 1,
                                ], 
                                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
                                [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 6, 6, 6, 6, 6, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,15,15,15,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,18,18,18,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8,17,16,17,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                                 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,]]);
    map.set("tilemap", "unwalkable", [6, 13, 15, 12, 11, 9, 18]);
    
    map.set("tilemap", "spriteSheetName", "content/images/map/fairgrounds0.png");
    {
        var i = Lemonade.Repository.addImage("content/images/map/fairgrounds0.png", "content/images/map/fairgrounds0.png", 256, 32);
        i.setSpriteSheet(8, 32, 32);
        i.originX = GLB_TILE_SIZE / 2;
        i.originY = GLB_TILE_SIZE / 2;
    }
    
    return map;
};

var MapUtils = {};

MapUtils.getTile = function(e, tx, ty, layer){
    layer = layer || 2;// By default, 2 is the collision layer.
    if(tx < 0 || ty < 0 || tx >= e.get("tilemap", "width") || ty >= e.get("tilemap", "height")
         || layer >= e.get("tilemap", "tiles").length)
        return -1;
    return e.get("tilemap", "tiles")[layer][ ty* e.get("tilemap", "width") + tx];
};

MapUtils.getPathTo = function(e, tx1, ty1, tx2, ty2){
    
};

MapUtils.canHeroMove = function(e, map, tx, ty){
    if(FortUtils.inRange(e, tx, ty, FortUtils.getMoveRange(e)) === false)
        return false;
    if(MapUtils.isWalkable(map, MapUtils.getTile(map, tx, ty)) === false)
        return false;
    if(MapUtils.getHeroOn(map, tx, ty) !== undefined)
        return false;
    /*
    if(tx < 0 || ty < 0)
        return false;
    if(MapUtils.canSee(e, map, tx, ty, 2) === false)
        return false;
    if(MapUtils.isWalkable(map, MapUtils.getTile(map, FortUtils.getTileX(e), FortUtils.getTileY(e) + 1)) === false && ty <= FortUtils.getTileY(e))
        return true;
    if(MapUtils.isWalkable(map, MapUtils.getTile(map, FortUtils.getTileX(e) + 1, FortUtils.getTileY(e))) === false && tx < FortUtils.getTileX(e) && ty <= FortUtils.getTileY(e))
        return true;
    if(MapUtils.isWalkable(map, MapUtils.getTile(map, FortUtils.getTileX(e) - 1, FortUtils.getTileY(e))) === false && tx > FortUtils.getTileX(e) && ty <= FortUtils.getTileY(e))
        return true;
    if(ty > FortUtils.getTileY(e))
        return true;*/
    return true;
};

MapUtils.getHeroOn = function(e, tx, ty){
    // Use gamedata.heroes
    for(var i=0;i<GameData.heroes.length;i++)
    {
        if(FortUtils.distanceTo(GameData.heroes[i], tx, ty) === 0)
            return GameData.heroes[i];
    }
    return undefined;
};

MapUtils.isWalkable = function(e, tile){
    if(tile === -1)
        return false;
    return !Lemonade.arrayContains(e.get("tilemap", "unwalkable"), tile);
};

MapUtils.walkableHero = function(e, tx, ty){
    
};

MapUtils.distanceTo = function(sx, sy, tx, ty){
    return Math.abs((sx - tx)) + Math.abs(sy - ty);
};

MapUtils.generateMapImage = function(e){
    var tiles = e.get("tilemap", "tiles");
    
    var can = document.createElement('canvas');
    can.width = (e.get("tilemap", "width")) * GLB_TILE_SIZE;
    can.height = (e.get("tilemap", "height")) * GLB_TILE_SIZE;
    var ssheet = Lemonade.Repository.getImage(e.get("tilemap", "spriteSheetName"));
        ssheet.iImage.crossOrigin = "anonymous";
    
    var ctx = can.getContext('2d');
    
    var totalTiles = 0;
    
    for(var j=0;j<tiles.length;j++){
        totalTiles = tiles[j].length;
        for(var i=0;i<tiles[j].length;i++)
        {
            var tile = tiles[j][i];
            if(tile == 0)
                continue;
            ctx.globalAlpha = 1;
            ssheet.draw(Math.floor(i%e.get("tilemap", "width")) * GLB_TILE_SIZE, 
                Math.floor(i/e.get("tilemap", "width"))*GLB_TILE_SIZE, 
                GLB_TILE_SIZE + GLB_TILE_SEPERATER, GLB_TILE_SIZE + GLB_TILE_SEPERATER, 
                    tile, ctx, 0);
        }
    }
    
    can.crossOrigin = "anonymous";
    var dat = new Image();
    dat.src = can.toDataURL("image/png");
        dat.crossOrigin = "anonymous";
    
    console.log("Generated map with "+ totalTiles + "tiles");
    return dat;
};
MapUtils.generateMapCover = function(e){
    var tiles = e.get("tilemap", "tiles");
    
    var can = document.createElement('canvas');
    can.width = e.get("tilemap", "width") * GLB_TILE_SIZE;
    can.height = e.get("tilemap", "height") * GLB_TILE_SIZE;
    
    var ctx = can.getContext('2d');
    
    var totalTiles = 0;
    
    for(var j=0;j<tiles.length;j++){
        totalTiles = tiles[j].length;
        for(var i=0;i<tiles[j].length;i++)
        {
            var tile = tiles[j][i];
            if(tile == 0)
                continue;
            if(temp.selected === undefined || 
                MapUtils.canSee(temp.selected, e, i%(e.get("tilemap", "width")), Math.floor(i/e.get("tilemap", "width"))) === false)
            {
                ctx.globalAlpha = .25;
                ctx.fillStyle = "#000000";
                ctx.fillRect(Math.floor(i%e.get("tilemap", "width")) * GLB_TILE_SIZE, 
                Math.floor(i/e.get("tilemap", "width"))*GLB_TILE_SIZE, GLB_TILE_SIZE,
                GLB_TILE_SIZE);
                ctx.globalAlpha = 1;
            }else
                ctx.globalAlpha = 1;
        }
    }
    
    can.crossOrigin = "anonymous";
    var dat = new Image();
    dat.src = can.toDataURL("image/png");
        dat.crossOrigin = "anonymous";
    
    console.log("Generated map cover with "+ totalTiles + "tiles");
    return dat;
};

MapUtils.updateMap = function(e){
    var i = Lemonade.Repository.addImage("MAPIMAGE", DO_NOT_LOAD);
    e.set("image", "image", Lemonade.Repository.addImage("MAPIMAGE", undefined, e.get("tilemap", "width") * GLB_TILE_SIZE, e.get("tilemap", "height") * GLB_TILE_SIZE));
    e.get("image", "image").iImage = MapUtils.generateMapImage(e);
    e.get("image", "image").forceReady();
    
    e.set("tilemap", "updateMap", false);
    return e;
};

MapUtils.updateMapCover = function(e){
    var img = Lemonade.Repository.addImage("MAPCOVERIMAGE", undefined, e.get("tilemap", "width") * GLB_TILE_SIZE, e.get("tilemap", "height") * GLB_TILE_SIZE);
    img.iImage = MapUtils.generateMapCover(e);

    img.forceReady();

    e.set("tilemap", "mapcover", img);

    e.set("tilemap", "updateCover", false);

    return e;
};

// Neighbor awareness for tiles. Automatic choosing of tiles in spritesheet
MapUtils.NeighborAwareness = {};

// Based on whether the tiles are walkable ornaw
MapUtils.NeighborAwareness.getTileIDwalk = function(e, tx, ty, layer){
    var sum = 0;
    
    if(MapUtils.isWalkable(e, MapUtils.getTile(e, tx, ty-1, layer)))
        sum += 1;
    if(MapUtils.isWalkable(e, MapUtils.getTile(e, tx-1, ty, layer)))
        sum += 2;
    if(MapUtils.isWalkable(e, MapUtils.getTile(e, tx, ty+1, layer)))
        sum += 4;
    if(MapUtils.isWalkable(e, MapUtils.getTile(e, tx+1, ty, layer)))
        sum += 8;
    
    return sum;
};
MapUtils.NeighborAwareness.getTileIDwalkhero = function(e, tx, ty, layer, hero, range){
    var sum = 0;
    
    if(!(!MapUtils.isWalkable(e, MapUtils.getTile(e, tx, ty-1, layer)) ||
        !FortUtils.inRange(hero, tx, ty-1, range) ||
        MapUtils.getHeroOn(undefined, tx, ty-1)!==undefined ||
        (FortUtils.getTileX(hero) === tx && FortUtils.getTileY(hero) === ty - 1)))
        sum += 1;
    if(!(!MapUtils.isWalkable(e, MapUtils.getTile(e, tx-1, ty, layer)) ||
        !FortUtils.inRange(hero, tx-1, ty, range) ||
        MapUtils.getHeroOn(undefined, tx-1, ty)!==undefined ||
        (FortUtils.getTileX(hero) === tx - 1 && FortUtils.getTileY(hero) === ty)))
        sum += 2;
    if(!(!MapUtils.isWalkable(e, MapUtils.getTile(e, tx, ty+1, layer)) ||
        !FortUtils.inRange(hero, tx, ty+1, range) ||
        MapUtils.getHeroOn(undefined, tx, ty+1)!==undefined ||
        (FortUtils.getTileX(hero) === tx && FortUtils.getTileY(hero) === ty + 1)))
        sum += 4;
    if(!(!MapUtils.isWalkable(e, MapUtils.getTile(e, tx+1, ty, layer)) ||
        !FortUtils.inRange(hero, tx+1, ty, range) ||
        MapUtils.getHeroOn(undefined, tx+1, ty)!==undefined ||
        (FortUtils.getTileX(hero) === tx + 1 && FortUtils.getTileY(hero) === ty)))
        sum += 8;
    
    return sum;
};

// Drawing line algorithm, forgot the name,

MapUtils.getPathTo = function(tx1, ty1, tx2, ty2)
{
    // COURTESY CAPTAIN ANONYMOUS
    var path = [];
    var // Step directions
        stepX = tx1 < tx2 ? 1 : -1,
        stepY = ty1 < ty2 ? 1 : -1,
        // Boundary for largest movement point
        deltaX = Math.abs(tx2 - tx1), 
        deltaY = Math.abs(ty2 - ty1),
        // deltaZ = Math.abs(end.z - start.z),
        // How many squares to advance in an increment (prevents reading corners)
        err = deltaX - deltaY;
    var x = tx1, y = ty1, valid = true, errCalc;
    for (var i = 0; i < 20; i++) {
        // Check for destination
        if (x === tx2 && y === ty2) { break; }
        // Check error and increment x
        errCalc = 2 * err;
        if (errCalc > deltaY * -1) {
        err -= deltaY;
        x += stepX;
        }
        // Check for destination
        if (x === tx2 && y === ty2) { break; }
        // Inrement y
        if (errCalc < deltaX) {
        err += deltaX;
        y += stepY;
        }
        path.push({xx: x, yy: y});
    }
    return path;
};
MapUtils.canSee = function(hero, map, tx, ty, maxBlock){
    if(FortUtils.inRange(hero, tx, ty, FortUtils.getSightRange(hero)) === false)
        return false;
    maxBlock = maxBlock || 1;
    var cs = MapUtils.getPathTo(tx, ty, FortUtils.getTileX(hero), FortUtils.getTileY(hero));
    var curBlock = 0;
    for(var i=0;i<cs.length;i++)
    {
        if(MapUtils.isWalkable(map, MapUtils.getTile(map, cs[i].xx, cs[i].yy)) === false)
            curBlock++;
        if(curBlock >= maxBlock)
            return false;
    }
    return true;
};

MapUtils.getSpawnPosition = function(hero, map){
    var spawns = map.get("tilemap", "spawnPositions");
    for(var i=0;i<spawns.length;i++){
        if(spawns[i].team === FortUtils.getTeam(hero) && MapUtils.getHeroOn(spawns[i].x, spawns[i].y) === undefined){
            return spawns[i];
        }else if(spawns[i].team = -1 && MapUtils.getHeroOn(spawns[i].x, spawns[i].y) === undefined)
            return spawns[i];
    }
    return {team: -1, x:0, y: 0};
};
MapUtils.addSpawnPosition = function(map, tx, ty, t){
    map.get("tilemap", "spawnPositions").push({x:tx, y:ty, team: t});;
};